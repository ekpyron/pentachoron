/*  
 * This file is part of DRE.
 *
 * DRE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * DRE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with DRE.  If not, see <http://www.gnu.org/licenses/>.
 */

uniform mat4 shadowmat;

float compute_shadow (in vec3 pos)
{
	vec4 lspos;

	lspos = shadowmat * vec4 (pos, 1);
	lspos.xyz /= lspos.w;

	if (lspos.w < 0 || lspos.x < 0 || lspos.y < 0
	    || lspos.x > 1 || lspos.y > 1)
	{
		return 1.0f;
	}

	vec2 moments = texture (shadowmap, lspos.xy).xy;


	if (lspos.z <= moments.x)
	{
	   return 1.0f;
	}

	float variance = moments.y - (moments.x * moments.x);
	variance = max (variance, 0.00001f);
	float d = lspos.z - moments.x;
	float p = variance / (variance + d * d);
	return smoothstep (0.1f, 1.0f, p);
}
