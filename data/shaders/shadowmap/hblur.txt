#version 420 core

layout (binding = 0) uniform sampler2D image;
uniform vec2 invviewport;

layout (location = 0) out vec2 color;

const float offset[3] = float[] (0.0, 1.3846153846, 3.2307692308);
const float weight[3] = float[] (0.2270270270, 0.3162162162, 0.0702702703);

vec2 getmoments (vec2 coord)
{
	float depth;
	depth = texture2D (image, coord).x;
	return vec2 (depth, depth * depth);
}

void main(void)
{
	vec2 c;
	c = getmoments (gl_FragCoord.xy * invviewport) * weight[0];

	for (int i = 1; i < 3; i++)
	{
		vec2 coord;
		coord = gl_FragCoord.xy + vec2 (offset[i], 0);
		c += getmoments (coord * invviewport)
		     * weight[i];

		coord = gl_FragCoord.xy - vec2 (offset[i], 0);
		c += getmoments (coord * invviewport)
		     * weight[i];
	}
	color = c;
}
