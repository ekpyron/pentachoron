/*  
 * This file is part of DRE.
 *
 * DRE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * DRE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with DRE.  If not, see <http://www.gnu.org/licenses/>.
 */
#version 420 core

layout (binding = 0) uniform sampler2D image;
layout (binding = 1) uniform samplerBuffer buffer;
uniform vec2 invviewport;

layout (location = 0) out vec2 color;

void main(void)
{
	vec2 c;
	c = texture2D (image, gl_FragCoord.xy * invviewport).xy
	    * texelFetch (buffer, 0).r;

	for (int i = 1; i < textureSize (buffer); i++)
	{
		vec2 coord;
		vec2 weightoffset = texelFetch (buffer, i).rg;

		coord = gl_FragCoord.xy + vec2 (0, weightoffset.g);
		c += texture (image, coord * invviewport).xy
		     * weightoffset.r;

		coord = gl_FragCoord.xy - vec2 (0, weightoffset.g);
		c += texture (image, coord * invviewport).xy
		     * weightoffset.r;
	}
	color = c;
}
