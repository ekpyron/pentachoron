#version 420 core
layout(location = 0) out float mask;
layout(binding = 0) uniform sampler2D shadowmap;
layout(binding = 1) uniform sampler2D depthtexture;

uniform uvec2 viewport;
uniform vec4 projinfo;
uniform mat4 vmatinv;
uniform mat4 shadowmat;

vec4 getpos (vec2 coord)
{
	vec4 pos;
	pos.xy = coord;
	pos.z = texture (depthtexture, coord).r;
	pos.w = 1;
	pos = pos * 2 - 1;
	vec4 p;
	p.x = pos.x * projinfo.x;
	p.y = pos.y * projinfo.y;
	p.z = -pos.w;
	p.w = (pos.z * (projinfo.z - projinfo.w)
	       + pos.w * (projinfo.z + projinfo.w))
	      / (2 * projinfo.z * projinfo.w);

	pos = vmatinv * p;
	pos.xyz /= pos.w;
	pos.w = 1.0;

	return pos;
}

void main (void)
{
	vec2 coord;
	vec4 pos;
	coord = gl_FragCoord.xy / viewport;

	pos = getpos (coord);

	pos = shadowmat * pos;
	pos.xyz /= pos.w;

	if (pos.w < 0 || pos.x < 0 || pos.y < 0
	    || pos.x > 1 || pos.y > 1)
	{
		mask = 1;
		return;
	}

	vec2 moments;
	moments = texture (shadowmap, pos.xy).xy;

	if (pos.z <= moments.x)
	{
	   mask = 1;
	   return;
	}

	float variance = moments.y - (moments.x * moments.x);
	variance = max (variance, 0.00001);
	float d = pos.z - moments.x;
	float p = variance / (variance + d * d);
	float s = smoothstep (0.1, 1.0, p);

	mask = s;

}
