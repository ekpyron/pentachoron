#version 420 core

layout(location = 0) out vec4 color;
layout(location = 1) out vec4 normal;
layout(location = 2) out vec4 specular;
layout(location = 3) out float depth;

layout(binding = 0) uniform sampler2D diffusemap;
layout(binding = 1) uniform sampler2D normalmap;
layout(binding = 2) uniform sampler2D specularmap;
layout(binding = 3) uniform sampler2D parametermap;
uniform bool diffuse_enabled;
uniform bool normalmap_enabled;
uniform bool specularmap_enabled;
uniform bool parametermap_enabled;
uniform uvec2 viewport;

layout (early_fragment_tests) in;

in vec2 uv;

smooth in vec3 fTangent;
smooth in vec3 fBinormal;
smooth in vec3 fNormal;

void main (void)
{
	if (diffuse_enabled)
		color = texture2D (diffusemap, uv);
	else
		color = vec4 (1.0, 1.0, 1.0, 1.0);

	if (specularmap_enabled)
		specular.xyz = texture2D (specularmap, uv).xyz;
	else
		specular.xyz = vec3 (0.0, 0.0, 0.0);

	if (normalmap_enabled)
	{
		vec3 n;
		mat3x3 tangentmat;
		tangentmat = mat3x3 (fTangent, fBinormal, fNormal);

		n.xy = texture2D (normalmap, uv).xy * 2.0 - 1.0;
		n.z = sqrt (1.0 - n.x * n.x - n.y * n.y);
		normal.xyz = (tangentmat * n) * 0.5 + 0.5;
	}
	else
	{
		normal.xyz = fNormal * 0.5 + 0.5;
	}

	if (parametermap_enabled)
	{
		specular.w = texture2D (parametermap, uv).r;
	}
	else
	{
		specular.w = 0;
	}

	depth = gl_FragCoord.z;
}
